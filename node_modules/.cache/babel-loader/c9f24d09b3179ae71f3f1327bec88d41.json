{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Dropbox/My Mac (Erics-MacBook-Pro-3.local)/Desktop/repos/misc/billsplit/app/src/Results.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Results(props) {\n  // console.log(props);\n  // Error warnings along the way\n  var warnings = [[false, 'The subtotal was more than the total.'] // [false, 'Some itemized transactions had no marked payers.'],\n  // [false, 'Some names were duplicated in the list.'],\n  // [false, 'The calculated total doesn\\'t add up to the original total.']\n  ]; // Calculate subtotal by person\n\n  var subtotalArrayByPerson = new Array(props.peopleList.length);\n  var subtotal = 0;\n  const total = props.total;\n  subtotalArrayByPerson.fill(0);\n\n  for (let i = 0; i < props.spendingArray.length; i++) {\n    let totalCostOfItem = props.spendingArray[i][0];\n    console.log(totalCostOfItem);\n    subtotal += parseFloat(totalCostOfItem);\n    let totalPeoplePayingItem = props.spendingArray[i].length - 1;\n    let totalCostOfItemByPerson = totalCostOfItem / totalPeoplePayingItem;\n\n    for (let j = 0; j < totalPeoplePayingItem; j++) {\n      subtotalArrayByPerson[props.spendingArray[i][j + 1]] += totalCostOfItemByPerson;\n    }\n  } // console.log('SUBTOTAL');\n  // console.log(subtotal);\n  // console.log(subtotalArrayByPerson);\n  // Calculate percentages of subtotal by person\n\n\n  var percentageArrayByPerson = new Array(props.peopleList.length);\n\n  for (let i = 0; i < percentageArrayByPerson.length; i++) {\n    percentageArrayByPerson[i] = subtotalArrayByPerson[i] / subtotal;\n  } // console.log('PERCENTAGES');\n  // console.log(percentageArrayByPerson);\n  // Calculate totals by person\n\n\n  var totalsByPerson = new Array(props.peopleList.length);\n\n  if (subtotal == total) {\n    totalsByPerson = subtotalArrayByPerson;\n  } else {\n    for (let i = 0; i < totalsByPerson.length; i++) {\n      totalsByPerson[i] = percentageArrayByPerson[i] * total;\n    }\n  } // console.log('TOTALS');\n  // console.log(totalsByPerson);\n  // Warning for subtotal and total mistake\n\n\n  if (subtotal > total) {\n    warnings[1][0] = true;\n  }\n\n  const TotalByPerson = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.person, \": \", props.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 34\n  }, this);\n\n  const Warning = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.warningText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), totalsByPerson.map((totalByPerson, index) => /*#__PURE__*/_jsxDEV(TotalByPerson, {\n      person: props.peopleList[index],\n      total: totalByPerson\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 53\n    }, this)), warnings.map((warning, index) => {\n      if (warning[0]) {\n        return /*#__PURE__*/_jsxDEV(Warning, {\n          warningText: warning[1]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["Button","Container","Form","Row","Col","Results","props","warnings","subtotalArrayByPerson","Array","peopleList","length","subtotal","total","fill","i","spendingArray","totalCostOfItem","console","log","parseFloat","totalPeoplePayingItem","totalCostOfItemByPerson","j","percentageArrayByPerson","totalsByPerson","TotalByPerson","person","Warning","warningText","map","totalByPerson","index","warning"],"sources":["/Users/eric/Dropbox/My Mac (Erics-MacBook-Pro-3.local)/Desktop/repos/misc/billsplit/app/src/Results.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport {Button, Container, Form, Row, Col} from 'react-bootstrap';\n\nfunction Results(props) {\n  // console.log(props);\n\n  // Error warnings along the way\n  var warnings = [\n    [false, 'The subtotal was more than the total.'],\n    // [false, 'Some itemized transactions had no marked payers.'],\n    // [false, 'Some names were duplicated in the list.'],\n    // [false, 'The calculated total doesn\\'t add up to the original total.']\n  ]\n\n  // Calculate subtotal by person\n  var subtotalArrayByPerson = new Array(props.peopleList.length);\n  var subtotal = 0;\n  const total = props.total;\n  subtotalArrayByPerson.fill(0);\n  for (let i = 0; i < props.spendingArray.length; i++) {\n    let totalCostOfItem = props.spendingArray[i][0];\n    console.log(totalCostOfItem);\n    subtotal += parseFloat(totalCostOfItem);\n    let totalPeoplePayingItem = props.spendingArray[i].length - 1;\n    let totalCostOfItemByPerson = totalCostOfItem / totalPeoplePayingItem;\n    for (let j = 0; j < totalPeoplePayingItem; j++) {\n      subtotalArrayByPerson[props.spendingArray[i][j+1]] += totalCostOfItemByPerson\n    }\n  }\n\n  // console.log('SUBTOTAL');\n  // console.log(subtotal);\n  // console.log(subtotalArrayByPerson);\n\n  // Calculate percentages of subtotal by person\n  var percentageArrayByPerson = new Array(props.peopleList.length);\n  for (let i = 0; i < percentageArrayByPerson.length; i++) {\n    percentageArrayByPerson[i] = subtotalArrayByPerson[i] / subtotal;\n  }\n\n  // console.log('PERCENTAGES');\n  // console.log(percentageArrayByPerson);\n\n  // Calculate totals by person\n  var totalsByPerson = new Array(props.peopleList.length);\n\n  if (subtotal == total) {\n    totalsByPerson = subtotalArrayByPerson\n  } else {\n    for (let i = 0; i < totalsByPerson.length; i++) {\n      totalsByPerson[i] = percentageArrayByPerson[i] * total;\n    }\n  }\n\n  // console.log('TOTALS');\n  // console.log(totalsByPerson);\n\n  // Warning for subtotal and total mistake\n  if (subtotal > total) {\n    warnings[1][0] = true;\n  }\n\n  const TotalByPerson = props => <div>{props.person}: {props.total}</div>;\n  const Warning = props => <div>{props.warningText}</div>\n\n  return (\n    <div>\n      <h4>Results</h4>\n      {totalsByPerson.map((totalByPerson, index) => <TotalByPerson key={index} person={props.peopleList[index]} total={totalByPerson} />)}\n      {warnings.map((warning, index) => {\n        if (warning[0]) {\n          return <Warning key={index} warningText={warning[1]} />\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}