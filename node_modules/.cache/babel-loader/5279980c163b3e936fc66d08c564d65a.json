{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Dropbox/My Mac (Erics-MacBook-Pro-3.local)/Desktop/repos/misc/billsplit/app/src/Results.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Results(props) {\n  console.log(props); // Calculate subtotal by person\n\n  var subtotalArrayByPerson = new Array(props.peopleList.length);\n  var subtotal = 0;\n  const total = props.total;\n  subtotalArrayByPerson.fill(0);\n\n  for (let i = 0; i < props.spendingArray.length; i++) {\n    let totalCostOfItem = props.spendingArray[i][0];\n    subtotal += totalCostOfItem;\n    let totalPeoplePayingItem = props.spendingArray[i].length - 1;\n    let totalCostOfItemByPerson = totalCostOfItem / totalPeoplePayingItem;\n\n    for (let j = 0; j < totalPeoplePayingItem; j++) {\n      subtotalArrayByPerson[props.spendingArray[i][j + 1]] += totalCostOfItemByPerson;\n    }\n  }\n\n  console.log('SUBTOTAL');\n  console.log(subtotalArrayByPerson); // Calculate percentages of subtotal by person\n\n  var percentageArrayByPerson = new Array(props.peopleList.length);\n\n  for (let i = 0; i < percentageArrayByPerson.length; i++) {\n    percentageArrayByPerson[i] = subtotalArrayByPerson[i] / subtotal;\n  }\n\n  console.log('PERCENTAGES');\n  console.log(percentageArrayByPerson); // Calculate totals by person\n\n  var totalsByPerson = new Array(props.peopleList.length);\n\n  for (let i = 0; i < totalsByPerson.length; i++) {\n    totalsByPerson[i] = percentageArrayByPerson[i] * total;\n  }\n\n  console.log('TOTALS');\n  console.log(totalsByPerson); // Error warnings along the way\n\n  var subtotalMoreThanTotal = [false, 'The subtotal was more than the total.'];\n  var duplicateNames = [false, 'Some names were duplicated in the list.'];\n  var noPayer = [false, 'Some itemized transactions had no marked payers.'];\n  var finalTotalNotCorrect = [false, 'The calculated total doesn\\'t add up to the original total.'];\n\n  if (subtotal > total) {\n    subtotalMoreThanTotal = true;\n  }\n\n  const TotalByPerson = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.person, \": \", props.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 34\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), totalsByPerson.map((totalByPerson, index) => /*#__PURE__*/_jsxDEV(TotalByPerson, {\n      person: props.peopleList[index],\n      total: totalByPerson\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 53\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["Button","Container","Form","Row","Col","Results","props","console","log","subtotalArrayByPerson","Array","peopleList","length","subtotal","total","fill","i","spendingArray","totalCostOfItem","totalPeoplePayingItem","totalCostOfItemByPerson","j","percentageArrayByPerson","totalsByPerson","subtotalMoreThanTotal","duplicateNames","noPayer","finalTotalNotCorrect","TotalByPerson","person","map","totalByPerson","index"],"sources":["/Users/eric/Dropbox/My Mac (Erics-MacBook-Pro-3.local)/Desktop/repos/misc/billsplit/app/src/Results.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport {Button, Container, Form, Row, Col} from 'react-bootstrap';\n\nfunction Results(props) {\n  console.log(props);\n\n  // Calculate subtotal by person\n  var subtotalArrayByPerson = new Array(props.peopleList.length);\n  var subtotal = 0;\n  const total = props.total;\n  subtotalArrayByPerson.fill(0);\n  for (let i = 0; i < props.spendingArray.length; i++) {\n    let totalCostOfItem = props.spendingArray[i][0];\n    subtotal += totalCostOfItem;\n    let totalPeoplePayingItem = props.spendingArray[i].length - 1;\n    let totalCostOfItemByPerson = totalCostOfItem / totalPeoplePayingItem;\n    for (let j = 0; j < totalPeoplePayingItem; j++) {\n      subtotalArrayByPerson[props.spendingArray[i][j+1]] += totalCostOfItemByPerson\n    }\n  }\n\n  console.log('SUBTOTAL');\n  console.log(subtotalArrayByPerson);\n\n  // Calculate percentages of subtotal by person\n  var percentageArrayByPerson = new Array(props.peopleList.length);\n  for (let i = 0; i < percentageArrayByPerson.length; i++) {\n    percentageArrayByPerson[i] = subtotalArrayByPerson[i] / subtotal;\n  }\n\n  console.log('PERCENTAGES');\n  console.log(percentageArrayByPerson);\n\n  // Calculate totals by person\n  var totalsByPerson = new Array(props.peopleList.length);\n  for (let i = 0; i < totalsByPerson.length; i++) {\n    totalsByPerson[i] = percentageArrayByPerson[i] * total;\n  }\n\n  console.log('TOTALS');\n  console.log(totalsByPerson);\n\n  // Error warnings along the way\n  var subtotalMoreThanTotal = [false, 'The subtotal was more than the total.'];\n  var duplicateNames = [false, 'Some names were duplicated in the list.'];\n  var noPayer = [false, 'Some itemized transactions had no marked payers.'];\n  var finalTotalNotCorrect = [false, 'The calculated total doesn\\'t add up to the original total.'];\n\n  if (subtotal > total) {\n    subtotalMoreThanTotal = true;\n  }\n\n  const TotalByPerson = props => <div>{props.person}: {props.total}</div>;\n\n  return (\n    <div>\n      <h4>Results</h4>\n      {totalsByPerson.map((totalByPerson, index) => <TotalByPerson key={index} person={props.peopleList[index]} total={totalByPerson} />)}\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}